{"ast":null,"code":"var _jsxFileName = \"/home/aneshamdaoui/kalbonainealmarsose/React-The-completed-juide/section10/src/components/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authenticated = /*#__PURE__*/React.createContext({\n  isLoggedIn: true,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoged\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoged\");\n    setIsLoggedIn(false);\n  };\n  useEffect(() => {\n    const loggedInData = localStorage.getItem(\"isLoged\");\n    if (loggedInData === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthenticatedProvider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default Authenticated;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Authenticated","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","loginHandler","localStorage","setItem","logoutHandler","removeItem","loggedInData","getItem","AuthenticatedProvider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aneshamdaoui/kalbonainealmarsose/React-The-completed-juide/section10/src/components/Context/AuthContext.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Authenticated = React.createContext({\n  isLoggedIn: true,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoged\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoged\");\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const loggedInData = localStorage.getItem(\"isLoged\");\n    if (loggedInData === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <AuthenticatedProvider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}\n    >\n      {props.children}\n    </AuthenticatedProvider>\n  );\n};\n\nexport default Authenticated;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAa,CAAC;EACxCC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,OAAO,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC;AACjC,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,YAAY,GAAGA,CAACN,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAM,YAAY,CAACC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;IACpCH,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BF,YAAY,CAACG,UAAU,CAAC,SAAS,CAAC;IAClCL,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMoB,YAAY,GAAGJ,YAAY,CAACK,OAAO,CAAC,SAAS,CAAC;IACpD,IAAID,YAAY,KAAK,GAAG,EAAE;MACxBN,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACmB,qBAAqB;IACpBC,KAAK,EAAE;MACLjB,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAAEW,aAAa;MACvBV,OAAO,EAAEO;IACX,CAAE;IAAAS,QAAA,EAEDZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B,CAAC;AAACf,EAAA,CAjCWF,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAmChC,eAAeP,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}